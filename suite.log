{
  "title": "",
  "ctx": null,
  "suites": [
    {
      "title": "Generic Test Suite",
      "ctx": null,
      "suites": [
        {
          "title": "example-sdk",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "TG1zdcrF15KnOD72u06mD",
              "ctx": null,
              "_testId": "urn:uuid:80f420d0-093a-4339-b259-b7f48362f4f8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 224,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
              },
              "duration": 192,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "TG1zdcrF15KnOD72u06mD",
              "ctx": null,
              "_testId": "urn:uuid:d44b37b9-2851-4eac-a503-3f83acb0b70d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 414,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
              },
              "duration": 187,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "TG1zdcrF15KnOD72u06mD",
              "ctx": null,
              "_testId": "urn:uuid:b5106a83-e21c-4e5a-8a4a-4285aa9709da",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 602,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 2: The credential must have the correct type (Valid)"
              },
              "duration": 187,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "TG1zdcrF15KnOD72u06mD",
              "ctx": null,
              "_testId": "urn:uuid:daeee5e4-a765-4462-97c4-b5618d597705",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 789,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 2: The credential must have the correct type (Invalid)"
              },
              "duration": 187,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "TG1zdcrF15KnOD72u06mD",
              "ctx": null,
              "_testId": "urn:uuid:63cca3b5-28c3-406d-9cef-94bba175d337",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 975,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "TG1zdcrF15KnOD72u06mD",
              "ctx": null,
              "_testId": "urn:uuid:8a96f144-5e32-48f8-970c-c1049c4aeda2",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1162,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "G6HWVhKEEmNf2XLwLt4fN",
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "_testId": "urn:uuid:29fa2021-3665-412b-9187-1949e1d7274b"
        },
        {
          "title": "example-server",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "R1G3BCUC3YQMfgKod-S-m",
              "ctx": null,
              "_testId": "urn:uuid:0a209b14-7888-482f-ba2a-9df3e6314e42",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1350,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "R1G3BCUC3YQMfgKod-S-m",
              "ctx": null,
              "_testId": "urn:uuid:d2369f7b-046f-4972-b799-73be7610951f",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1537,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "R1G3BCUC3YQMfgKod-S-m",
              "ctx": null,
              "_testId": "urn:uuid:07b9b246-fae0-4e7a-b927-5e726aac3ea8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "R1G3BCUC3YQMfgKod-S-m",
              "ctx": null,
              "_testId": "urn:uuid:d0e43a54-7855-4b58-b331-2c7c2f841665",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1689,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "R1G3BCUC3YQMfgKod-S-m",
              "ctx": null,
              "_testId": "urn:uuid:ed558ffd-bfbe-46f1-985e-5e42c37d4523",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1724,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
              },
              "duration": 185,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "R1G3BCUC3YQMfgKod-S-m",
              "ctx": null,
              "_testId": "urn:uuid:efd4f0d5-2771-40f2-bbf6-cb0ecb4dec7a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1911,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "G6HWVhKEEmNf2XLwLt4fN",
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "_testId": "urn:uuid:2240c14b-f98b-4ac0-becd-8325ea133b61"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "TG1zdcrF15KnOD72u06mD",
          "ctx": null,
          "_testId": "urn:uuid:80f420d0-093a-4339-b259-b7f48362f4f8",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 224,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
          },
          "duration": 192,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "TG1zdcrF15KnOD72u06mD",
          "ctx": null,
          "_testId": "urn:uuid:d44b37b9-2851-4eac-a503-3f83acb0b70d",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 414,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
          },
          "duration": 187,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "TG1zdcrF15KnOD72u06mD",
          "ctx": null,
          "_testId": "urn:uuid:b5106a83-e21c-4e5a-8a4a-4285aa9709da",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 602,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 2: The credential must have the correct type (Valid)"
          },
          "duration": 187,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "TG1zdcrF15KnOD72u06mD",
          "ctx": null,
          "_testId": "urn:uuid:daeee5e4-a765-4462-97c4-b5618d597705",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 789,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 2: The credential must have the correct type (Invalid)"
          },
          "duration": 187,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "TG1zdcrF15KnOD72u06mD",
          "ctx": null,
          "_testId": "urn:uuid:63cca3b5-28c3-406d-9cef-94bba175d337",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 975,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "TG1zdcrF15KnOD72u06mD",
          "ctx": null,
          "_testId": "urn:uuid:8a96f144-5e32-48f8-970c-c1049c4aeda2",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1162,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "R1G3BCUC3YQMfgKod-S-m",
          "ctx": null,
          "_testId": "urn:uuid:0a209b14-7888-482f-ba2a-9df3e6314e42",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1350,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "R1G3BCUC3YQMfgKod-S-m",
          "ctx": null,
          "_testId": "urn:uuid:d2369f7b-046f-4972-b799-73be7610951f",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1537,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "R1G3BCUC3YQMfgKod-S-m",
          "ctx": null,
          "_testId": "urn:uuid:07b9b246-fae0-4e7a-b927-5e726aac3ea8",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1688,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "R1G3BCUC3YQMfgKod-S-m",
          "ctx": null,
          "_testId": "urn:uuid:d0e43a54-7855-4b58-b331-2c7c2f841665",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1689,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "R1G3BCUC3YQMfgKod-S-m",
          "ctx": null,
          "_testId": "urn:uuid:ed558ffd-bfbe-46f1-985e-5e42c37d4523",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1724,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
          },
          "duration": 185,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "R1G3BCUC3YQMfgKod-S-m",
          "ctx": null,
          "_testId": "urn:uuid:efd4f0d5-2771-40f2-bbf6-cb0ecb4dec7a",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1911,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "AlVdNSMPshpvVyVsEaltj",
      "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "example-sdk",
        "example-server"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:c36a3077-a3fa-4c2a-84ff-5c874e812531"
    }
  ],
  "tests": [],
  "root": true,
  "pending": false,
  "_retries": -1,
  "_beforeEach": [],
  "_beforeAll": [],
  "_afterEach": [],
  "_afterAll": [],
  "_timeout": 150000,
  "_slow": 75,
  "_bail": false,
  "_onlyTests": [],
  "_onlySuites": [],
  "delayed": false,
  "_events": {
    "pre-require": [
      null,
      null
    ]
  },
  "_eventsCount": 1,
  "_testId": "urn:uuid:546d8d21-9ad0-4072-972c-e12bd978ea1e"
}