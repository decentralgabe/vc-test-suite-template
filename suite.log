{
  "title": "",
  "ctx": null,
  "suites": [
    {
      "title": "Generic Test Suite",
      "ctx": null,
      "suites": [
        {
          "title": "example-sdk",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_yB6JpkgDb7K0Of-7SQrn",
              "ctx": null,
              "_testId": "urn:uuid:0d9cb18a-bc5c-4375-bc16-b52c76fb9e99",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 247,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
              },
              "duration": 192,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_yB6JpkgDb7K0Of-7SQrn",
              "ctx": null,
              "_testId": "urn:uuid:fed5a97f-14ec-46cb-95a2-427f92817ffa",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 437,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_yB6JpkgDb7K0Of-7SQrn",
              "ctx": null,
              "_testId": "urn:uuid:5c93f9e0-7b89-47c6-b8e0-c3ff96d682e0",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 624,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 2: The credential must have the correct type (Valid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_yB6JpkgDb7K0Of-7SQrn",
              "ctx": null,
              "_testId": "urn:uuid:600419c7-caed-443a-b047-be8a120a2e0d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 2: The credential must have the correct type (Invalid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_yB6JpkgDb7K0Of-7SQrn",
              "ctx": null,
              "_testId": "urn:uuid:cb99894d-99e0-4aa9-aa40-45f6a0dab9a3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 997,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_yB6JpkgDb7K0Of-7SQrn",
              "ctx": null,
              "_testId": "urn:uuid:9fdd0f40-c7ff-4313-86da-d0f8572056ed",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1183,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
              },
              "duration": 185,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ys6Fu9Roqm-0Q6plXuVXY",
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "_testId": "urn:uuid:1b00cd97-2a0d-437c-82d4-b56bea198f71"
        },
        {
          "title": "example-server",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_nOTpZ1WmjcQqXJsltCf8",
              "ctx": null,
              "_testId": "urn:uuid:530249f1-b487-4171-aab6-47f8a45e9609",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1369,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_nOTpZ1WmjcQqXJsltCf8",
              "ctx": null,
              "_testId": "urn:uuid:3adeeb21-4e29-4a4b-bd3b-09165fc3b335",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1556,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_nOTpZ1WmjcQqXJsltCf8",
              "ctx": null,
              "_testId": "urn:uuid:a7fbb405-eb00-4b2f-b624-4ac87df5a6c5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1708,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_nOTpZ1WmjcQqXJsltCf8",
              "ctx": null,
              "_testId": "urn:uuid:5ed13dd0-6007-4cc1-a2e8-0dee67c7f53d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1708,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_nOTpZ1WmjcQqXJsltCf8",
              "ctx": null,
              "_testId": "urn:uuid:bbad3d0a-34ed-4b09-a643-41a9f8986a56",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1743,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "_nOTpZ1WmjcQqXJsltCf8",
              "ctx": null,
              "_testId": "urn:uuid:002714d5-1737-4345-822a-7788e6eaac94",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1930,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
              },
              "duration": 187,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "ys6Fu9Roqm-0Q6plXuVXY",
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "_testId": "urn:uuid:fed368b2-00a0-418a-8479-932e963419fc"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_yB6JpkgDb7K0Of-7SQrn",
          "ctx": null,
          "_testId": "urn:uuid:0d9cb18a-bc5c-4375-bc16-b52c76fb9e99",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 247,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
          },
          "duration": 192,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_yB6JpkgDb7K0Of-7SQrn",
          "ctx": null,
          "_testId": "urn:uuid:fed5a97f-14ec-46cb-95a2-427f92817ffa",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 437,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_yB6JpkgDb7K0Of-7SQrn",
          "ctx": null,
          "_testId": "urn:uuid:5c93f9e0-7b89-47c6-b8e0-c3ff96d682e0",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 624,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 2: The credential must have the correct type (Valid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_yB6JpkgDb7K0Of-7SQrn",
          "ctx": null,
          "_testId": "urn:uuid:600419c7-caed-443a-b047-be8a120a2e0d",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 811,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 2: The credential must have the correct type (Invalid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_yB6JpkgDb7K0Of-7SQrn",
          "ctx": null,
          "_testId": "urn:uuid:cb99894d-99e0-4aa9-aa40-45f6a0dab9a3",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 997,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_yB6JpkgDb7K0Of-7SQrn",
          "ctx": null,
          "_testId": "urn:uuid:9fdd0f40-c7ff-4313-86da-d0f8572056ed",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1183,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
          },
          "duration": 185,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_nOTpZ1WmjcQqXJsltCf8",
          "ctx": null,
          "_testId": "urn:uuid:530249f1-b487-4171-aab6-47f8a45e9609",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1369,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_nOTpZ1WmjcQqXJsltCf8",
          "ctx": null,
          "_testId": "urn:uuid:3adeeb21-4e29-4a4b-bd3b-09165fc3b335",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1556,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_nOTpZ1WmjcQqXJsltCf8",
          "ctx": null,
          "_testId": "urn:uuid:a7fbb405-eb00-4b2f-b624-4ac87df5a6c5",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1708,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_nOTpZ1WmjcQqXJsltCf8",
          "ctx": null,
          "_testId": "urn:uuid:5ed13dd0-6007-4cc1-a2e8-0dee67c7f53d",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1708,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_nOTpZ1WmjcQqXJsltCf8",
          "ctx": null,
          "_testId": "urn:uuid:bbad3d0a-34ed-4b09-a643-41a9f8986a56",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1743,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "_nOTpZ1WmjcQqXJsltCf8",
          "ctx": null,
          "_testId": "urn:uuid:002714d5-1737-4345-822a-7788e6eaac94",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1930,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
          },
          "duration": 187,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "i9hnF0igQ5atyYjT7M639",
      "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "example-sdk",
        "example-server"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:9ba815e2-9c8d-4ab4-8b2d-d89c1b7199c6"
    }
  ],
  "tests": [],
  "root": true,
  "pending": false,
  "_retries": -1,
  "_beforeEach": [],
  "_beforeAll": [],
  "_afterEach": [],
  "_afterAll": [],
  "_timeout": 150000,
  "_slow": 75,
  "_bail": false,
  "_onlyTests": [],
  "_onlySuites": [],
  "delayed": false,
  "_events": {
    "pre-require": [
      null,
      null
    ]
  },
  "_eventsCount": 1,
  "_testId": "urn:uuid:c6fecdaf-4ad9-4b6c-a949-b5ce054a80c0"
}