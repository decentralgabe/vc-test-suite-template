{
  "title": "",
  "ctx": null,
  "suites": [
    {
      "title": "Generic Test Suite",
      "ctx": null,
      "suites": [
        {
          "title": "example-sdk",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "y0aezodAGftcSs7u3RHMg",
              "ctx": null,
              "_testId": "urn:uuid:2c40add7-a3dc-4395-80fe-a112afa88bb6",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 215,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
              },
              "duration": 187,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "y0aezodAGftcSs7u3RHMg",
              "ctx": null,
              "_testId": "urn:uuid:6c7ad1c9-3042-49c7-b392-e7aceca69d59",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 402,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "y0aezodAGftcSs7u3RHMg",
              "ctx": null,
              "_testId": "urn:uuid:2fcbb9ef-33bf-4453-81d3-9f5758cd5cc4",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 587,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 2: The credential must have the correct type (Valid)"
              },
              "duration": 183,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "y0aezodAGftcSs7u3RHMg",
              "ctx": null,
              "_testId": "urn:uuid:50a0fb6d-5fce-4411-963f-e0cea2100791",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 772,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 2: The credential must have the correct type (Invalid)"
              },
              "duration": 186,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "y0aezodAGftcSs7u3RHMg",
              "ctx": null,
              "_testId": "urn:uuid:06b2253c-fe5e-4108-a1df-e207c0b8768e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 956,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
              },
              "duration": 184,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "y0aezodAGftcSs7u3RHMg",
              "ctx": null,
              "_testId": "urn:uuid:ce9a01b7-b8ca-40de-ad5c-56d7af8ebb15",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1142,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-sdk",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
              },
              "duration": 185,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "1fPtfPY6OX80qEZA2rBqI",
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "_testId": "urn:uuid:239e62b6-181f-4b78-b84f-e4cae1b4b46e"
        },
        {
          "title": "example-server",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "816Q_xeJGb_oV1OWRl-A4",
              "ctx": null,
              "_testId": "urn:uuid:d14e221d-eca9-4601-a943-19e5e496444b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1326,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
              },
              "duration": 183,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "816Q_xeJGb_oV1OWRl-A4",
              "ctx": null,
              "_testId": "urn:uuid:68f81a2f-b667-4758-80f1-6365cf7c6d18",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1510,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
              },
              "duration": 183,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "816Q_xeJGb_oV1OWRl-A4",
              "ctx": null,
              "_testId": "urn:uuid:2abb7bf8-4284-450f-8e78-326ffe56b5f3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1661,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Requirement 2: The credential must have the correct type (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "816Q_xeJGb_oV1OWRl-A4",
              "ctx": null,
              "_testId": "urn:uuid:a61a33de-7a9f-499f-91b6-348bf47b9d12",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1662,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "816Q_xeJGb_oV1OWRl-A4",
              "ctx": null,
              "_testId": "urn:uuid:fe069002-96ba-4aec-8db4-8e955e0c2a19",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1695,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
              },
              "duration": 184,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'success'",
                "showDiff": true,
                "actual": "error",
                "expected": "success",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            },
            {
              "type": "test",
              "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
              "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
              "parent": "816Q_xeJGb_oV1OWRl-A4",
              "ctx": null,
              "_testId": "urn:uuid:445591f1-8592-4a2c-a28b-abc06e3d3c40",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1879,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "example-server",
                "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
              },
              "duration": 184,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'error' to equal 'failure'",
                "showDiff": true,
                "actual": "error",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "1fPtfPY6OX80qEZA2rBqI",
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "_testId": "urn:uuid:9f3805d7-895d-4d84-98b7-a225a2bff058"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "y0aezodAGftcSs7u3RHMg",
          "ctx": null,
          "_testId": "urn:uuid:2c40add7-a3dc-4395-80fe-a112afa88bb6",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 215,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
          },
          "duration": 187,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "y0aezodAGftcSs7u3RHMg",
          "ctx": null,
          "_testId": "urn:uuid:6c7ad1c9-3042-49c7-b392-e7aceca69d59",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 402,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "y0aezodAGftcSs7u3RHMg",
          "ctx": null,
          "_testId": "urn:uuid:2fcbb9ef-33bf-4453-81d3-9f5758cd5cc4",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 587,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 2: The credential must have the correct type (Valid)"
          },
          "duration": 183,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "y0aezodAGftcSs7u3RHMg",
          "ctx": null,
          "_testId": "urn:uuid:50a0fb6d-5fce-4411-963f-e0cea2100791",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 772,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 2: The credential must have the correct type (Invalid)"
          },
          "duration": 186,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "y0aezodAGftcSs7u3RHMg",
          "ctx": null,
          "_testId": "urn:uuid:06b2253c-fe5e-4108-a1df-e207c0b8768e",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 956,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
          },
          "duration": 184,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "y0aezodAGftcSs7u3RHMg",
          "ctx": null,
          "_testId": "urn:uuid:ce9a01b7-b8ca-40de-ad5c-56d7af8ebb15",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1142,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-sdk",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
          },
          "duration": 185,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "816Q_xeJGb_oV1OWRl-A4",
          "ctx": null,
          "_testId": "urn:uuid:d14e221d-eca9-4601-a943-19e5e496444b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1326,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 1: The credential must have a valid identifier (Valid)"
          },
          "duration": 183,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 1: The credential must have a valid identifier (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "816Q_xeJGb_oV1OWRl-A4",
          "ctx": null,
          "_testId": "urn:uuid:68f81a2f-b667-4758-80f1-6365cf7c6d18",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1510,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 1: The credential must have a valid identifier (Invalid)"
          },
          "duration": 183,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "816Q_xeJGb_oV1OWRl-A4",
          "ctx": null,
          "_testId": "urn:uuid:2abb7bf8-4284-450f-8e78-326ffe56b5f3",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1661,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "Requirement 2: The credential must have the correct type (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "816Q_xeJGb_oV1OWRl-A4",
          "ctx": null,
          "_testId": "urn:uuid:a61a33de-7a9f-499f-91b6-348bf47b9d12",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1662,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Valid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "816Q_xeJGb_oV1OWRl-A4",
          "ctx": null,
          "_testId": "urn:uuid:fe069002-96ba-4aec-8db4-8e955e0c2a19",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1695,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Valid)"
          },
          "duration": 184,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'success'",
            "showDiff": true,
            "actual": "error",
            "expected": "success",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'success'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        },
        {
          "type": "test",
          "title": "Requirement 3: The credential must have a valid issuance date (Invalid)",
          "body": "async function() {\n          if (!features[requiredFeature]) {\n            console.log(`Skipping test \"${testName}\" for ${i.name} due to missing feature: ${requiredFeature}`);\n            this.skip();\n            return;\n          }\n\n          console.log(`Running test: ${testName} for implementation: ${i.name}`);\n          await generateTestResults(i.name, testConfig);\n          this.test.cell = {columnId: i.name, rowId: testName};\n          const result = await checkTestResults(i.name, testConfig);\n          console.log(`Test result for ${i.name} - ${testName}: ${result}`);\n          should.equal(result, testConfig.expected_result);\n\n          // Log the test result in a format that matches the report generator's expectations\n          console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
          "parent": "816Q_xeJGb_oV1OWRl-A4",
          "ctx": null,
          "_testId": "urn:uuid:445591f1-8592-4a2c-a28b-abc06e3d3c40",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 1879,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "example-server",
            "rowId": "Requirement 3: The credential must have a valid issuance date (Invalid)"
          },
          "duration": 184,
          "state": "failed",
          "err": {
            "name": "AssertionError",
            "message": "expected 'error' to equal 'failure'",
            "showDiff": true,
            "actual": "error",
            "expected": "failure",
            "operator": "strictEqual",
            "stack": "AssertionError: expected 'error' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js:41:18)"
          }
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "QI8Hyaf4MuEsOzgNG_AG5",
      "file": "/home/runner/work/vc-test-suite-template/vc-test-suite-template/tests/test-runner.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "example-sdk",
        "example-server"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:1721c1bf-02ae-484f-9b70-fe350ace6411"
    }
  ],
  "tests": [],
  "root": true,
  "pending": false,
  "_retries": -1,
  "_beforeEach": [],
  "_beforeAll": [],
  "_afterEach": [],
  "_afterAll": [],
  "_timeout": 150000,
  "_slow": 75,
  "_bail": false,
  "_onlyTests": [],
  "_onlySuites": [],
  "delayed": false,
  "_events": {
    "pre-require": [
      null,
      null
    ]
  },
  "_eventsCount": 1,
  "_testId": "urn:uuid:abe5dbca-ffa5-4519-b84e-283a47b222ac"
}